API for Definitely Not Twitter

Tweet systems:

Get requests to [domain]/tweets/all will return a JSON object array of all tweet IDs on the server
body: N/A



Get requests to [domain]/tweets/recent will return a JSON object array of the specified number of tweets in descending order of posting (most recent first). Note that the first tweet posted will have an ID of 0, and IDs increment up by 1 per tweet posted. Trying to skip enough tweets that the array fills starting from an index lower than 0 will give an error.
body:
		limit: A string containing a number between 1 and 75 that is the maximum number of tweets in the array. If this field is left as an empty string it will default to 50.
		skip: A string containing a number that signifies how many of the most recent tweets to skip over before starting to fill the array. If this field is left as an empty string it will default to 0.



Get requests to [domain]/tweets/user/:userId will return a JSON object array of the specified number of tweets in descending order of posting (most recent first), that the user with ID :userId has either posted or liked.
body:
		limit: A string containing a number between 1 and 75 that is the maximum number of tweets in the array. If this field is left as an empty string it will default to 50.
		skip: A string containing a number that signifies how many of the most recent tweets that fulfill the other criteria to skip over before starting to fill the array. If this field is left as an empty string it will default to 0.
		findType: A string containing the type of tweet by the user to get. Options are "like", for tweets liked by the user, "post", for tweets posted by the user, and "retweet", for tweets retweeted by the user. Note that "retweet" does not get the user's retweets, but the actual parent tweet.



Get requests to [domain]/tweets/:id/replies will return a JSON object array of the specified number of tweets in ascending order of posting (least recent first), that are replies to the tweet with ID :id.
body:
		limit: A string containing a number between 1 and 75 that is the maximum number of tweets in the array. If this field is left as an empty string it will default to 50.
		skip: A string containing a number that signifies how many replies to skip over before starting to fill the array. If this field is left as an empty string it will default to 0.



Get requests to [domain]/tweet/:id will get a single JSON tweet object with the integer ID :id
body:
		id: An int containing the tweet's ID.



Post requests to [domain]/tweets with body below will add a new tweet with the appropriate properties and return a full JSON tweet object.
body:
		type: A string containing the tweet's type. valid types are "tweet", "retweet", and "reply"
		body: A string containing the tweet's text body. Replies and tweets have a minimum length of 1, retweets have a minimum length of 0. All types have a maximum length of 280.
		(optional) parentId: An int containing the ID of the parent tweet. Only include if type is a retweet or reply.
		(optional) mediaType: A string containing the type of media to embed in the tweet. Options are "none", "image", and "video".
		(optional) mediaId: A string containing either a direct image link, if mediaType is "image", or if mediaType is "video", a YouTube embed link or 11-character video ID. Examples of YouTube URL and ID below.

		[embed link: https://www.youtube.com/embed/M7lc1UVf-VE]
		[video ID: M7lc1UVf-VE]



Put requests to [domain]/tweets/:id with request body below will edit the tweet with ID :id with new properties, if applicable, and return a full JSON tweet object with the new properties.
body:
		body: A string containing the tweet's new text body. Maximum length 280 characters, minimum 1 for tweets and replies, 0 for retweets. If no changes are desired, request should include this field as a blank string.
		mediaType: A string containing the type of media to embed in the tweet. Options are "none", "image", and "video". If no changes in type are desired, request should include this field as a blank string.
		mediaId: A string containing either a direct image link, if mediaType is "image", or if mediaType is "video", a YouTube embed link or 11-character video ID. If no changes in media ID are desired, request should include this field as a blank string.



Post requests to [domain]/tweets/:id/like will unlike the tweet with ID :id if the user has liked it, and will like the tweet if the user has not liked it. Response will be true if the operation was successful.
body: N/A




Delete requests to /tweets/:id will replace the Tweet object at ID :id with an object with fields id (holding the tweet ID) and isDeleted, holding boolean true. If successful, the response will be a boolean true.
Tweets can only be deleted if logged in on the account that posted them, or logged in on an admin account.
body: N/A



Login/userbase interaction systems:

Post requests to [domain]/login with body below will, if login is successful, set a cookie containing the logged-in user ID and session state, and send back true
body:
		userId: A string containing the account ID/login name of the account attempting to log in.
		password: A string containing the user's password input.



Get requests to [domain]/logout will log out the currently logged in user and send back true. Works regardless of whether there is a user logged in.



Post requests to [domain]/register with body below will add a new User object to the users database, and allow for that user to log in.
body:
		userId: A string containing the user's account ID which they will use to log in. Max length 16 characters.
		displayName: A string containing the user's desired display name. Max length 32 characters.
		password: A string containing the user's desired password. Max length 24 characters.
		avatar: A string containing a link to the user's desired avatar. Will default to [default image link] if field is not provided. Max length 120 characters.



Delete requests to [domain]/users/:id will delete the user account and all tweets it has posted, and log the user out.
body: N/A



Get requests to [domain]/users will only go through if currently logged in as an admin. Response will be a JSON object containing all User objects in the database as key-value pairs.
body: N/A



Get requests to [domain]/users/idnames/:parameter will send back a JSON array containing an object for each user whose userId or displayName contains :parameter. These objects have a userId field and a displayName field.
body: N/A



Get requests to [domain]/users/:id will return a JSON User object if logged in as an admin, or as the user with ID :id. Otherwise, the response will contain a JSON UserView object, which is a User object without the password field.
body: N/A



Get requests to [domain]/users/current will get a UserView object for the currently logged in user.
body: N/A



Put requests to [domain]/users/:id will update a stored User object if the following fields are included in the body of the request. If successful, it will send back a UserView object of the user in question. Request will be denied unless the currently-logged-in user is an admin account or is logged in on the account with ID :id.
body:
		displayName: A string containing the user's desired new display name. Max length 32 characters. If this field should not be changed, its value should be equal to the original value.
		password: A string containing the user's desired new password. Max length 16 characters. If this field should not be changed, its value should be equal to the original value.
		avatar: A string containing a link to the user's desired new avatar. Max length 120 characters. If this field should not be changed, its value should be equal to the original value.
		profileDescription: A string containing the user's desired new profile description. Max length ??? characters. If this field should not be changed, its value should be an empty string.